function process_with_wiener()
    % Create a new figure for Wiener filter processing
    fig = figure('Name', 'Wiener Filter Processing', ...
        'NumberTitle', 'off', 'Position', [500, 200, 700, 500], ...
        'Color', [0.9 0.9 0.9], 'MenuBar', 'none', 'Resize', 'off');

    % Add title
    uicontrol('Style', 'text', ...
        'String', 'Wiener Filter Image Restoration', ...
        'FontSize', 18, 'FontWeight', 'bold', ...
        'Position', [150, 440, 400, 40], ...
        'BackgroundColor', [0.9 0.9 0.9], ...
        'HorizontalAlignment', 'center');

    % Upload Button
    uicontrol('Style', 'pushbutton', ...
        'String', 'Upload Image', ...
        'FontSize', 12, ...
        'Position', [50, 400, 150, 40], ...
        'BackgroundColor', [0.4 0.6 0.8], ...
        'Callback', @upload_image);

    % Axes for displaying images
    ax1 = axes('Parent', fig, 'Units', 'pixels', 'Position', [50, 100, 250, 250]);
    ax2 = axes('Parent', fig, 'Units', 'pixels', 'Position', [400, 100, 250, 250]);

    % Back Button
    uicontrol('Style', 'pushbutton', ...
        'String', 'Back', ...
        'FontSize', 12, ...
        'Position', [275, 20, 150, 40], ...
        'BackgroundColor', [0.7 0.3 0.3], ...
        'ForegroundColor', 'white', ...
        'Callback', @go_back);

    % Nested function to upload and process image
    function upload_image(~, ~)
        [file, path] = uigetfile({'*.jpg;*.png;*.bmp', 'Image Files'}, 'Select an Image');
        if isequal(file, 0)
            return;
        end
        img = imread(fullfile(path, file));
        gray = rgb2gray(img);
        noisy_img = imnoise(gray, 'gaussian', 0, 0.01); % Simulate Gaussian noise
        restored = wiener2(noisy_img, [5 5]);

        axes(ax1); imshow(noisy_img); title('Noisy Image');
        axes(ax2); imshow(restored); title('Restored with Wiener Filter');
    end

    % Back to processing menu
    function go_back(~, ~)
        close(fig);
        image_processing_menu;
    end
end
